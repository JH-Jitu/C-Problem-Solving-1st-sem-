//Md. Jidanul Hakim Jitu
// 20-44365-3
//Section B2 //Ans: 1


#include <iostream>
using namespace std;
class parent{
public:
void print(int i) {
cout << " First Function Display " << i << endl;
}
void print(double f) {
cout << " Second Function Display " << f << endl;
}
void print(char const *c) {
cout << " Third function Display char* " << c << endl;
}
};
int main() {
    parent P1;
P1.print(10);
P1.print(10.10);
P1.print("ten");
return 0;
}




//Md. Jidanul Hakim Jitu
// 20-44365-3
//Section B2 //Ans: 2


#include <iostream>
using namespace std;
class class_a {
public:
   void disp(){
      cout<<"Function of Parent Class";
   }
};
class class_b: public class_a{
public:
   void disp() {
      cout<<"Function of Child Class";
   }
};
int main() {
   class_b obj;     //will print the last function components
   obj.disp();
   return 0;
}




//Md. Jidanul Hakim Jitu
// 20-44365-3
//Section B2 //Ans: 3


#include <iostream>
using namespace std;

class class_1 {
   public:
    virtual void print() {
        cout << "Function 1" << endl;
    }
};

class class_2 : public class_1 {
   public:
    void print() {
        cout << "Function 2" << endl;
    }
};

int main() {
    class_2 obj;

    // pointer of class_1 type that points to obj
    class_1* base1 = &obj;

    // calls member function of class_2 class
    base1->print();

    return 0;
}





//Md. Jidanul Hakim Jitu
// 20-44365-3
//Section B2 //Ans: 4


#include <iostream>
using namespace std;

// Abstract class
class useAbs {
   protected:
    float inValue;

   public:
    void getResult() {
        cin >> inValue;
    }

    // pure virtual Function
    virtual float calculateArea() = 0;
};

// Derived class
class Square : public useAbs {
   public:
    float calculateArea() {
        return inValue * inValue;
    }
};

int main() {
    Square res;

    cout << "Enter the length of the square: ";
    res.getResult();
    cout << "Area of square: " << res.calculateArea() << endl;

    return 0;
}
